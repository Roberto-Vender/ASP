-- 1. STUDENT
CREATE TABLE STUDENT (
    STU_ID INT PRIMARY KEY,
    STU_LNAME VARCHAR(100) NOT NULL,      
    STU_FNAME VARCHAR(100) NOT NULL,       
    STU_MNAME VARCHAR(100),                 
    STU_HOME_ADDR TEXT,                      
    STU_CITY_ADDR VARCHAR(150),              
    STU_DISTRICT VARCHAR(100),               
    STU_CONTACT_NO VARCHAR(20),            
    STU_EMAIL VARCHAR(150) UNIQUE NOT NULL,   
    STU_FIRST_GEN BOOLEAN DEFAULT FALSE        
);


-- 2. SUBJECT
CREATE TABLE SUBJECT (
    SUB_ID INT PRIMARY KEY,
    SUB_NAME VARCHAR(100) NOT NULL,
    SUB_CODE VARCHAR(20) UNIQUE NOT NULL,
    SUB_CREDIT INT NOT NULL
);

-- 3. PREREQUISITE (Self-referencing many-to-many on SUBJECT)
CREATE TABLE PREREQUISITE (
    SUB_ID INT,
    PRE_SUB_ID INT,
    PRIMARY KEY (SUB_ID, PRE_SUB_ID),
    FOREIGN KEY (SUB_ID) REFERENCES SUBJECT(SUB_ID),
    FOREIGN KEY (PRE_SUB_ID) REFERENCES SUBJECT(SUB_ID)
);

-- 4. INSTRUCTOR
CREATE TABLE INSTRUCTOR (
    INS_ID INT PRIMARY KEY,
    INS_NAME VARCHAR(100) NOT NULL,
    INS_EMAIL VARCHAR(150) UNIQUE NOT NULL
);

-- 5. ROOM
CREATE TABLE ROOM (
    ROOM_ID INT PRIMARY KEY,
    ROOM_NUMBER VARCHAR(20) NOT NULL,
    ROOM_BUILDING VARCHAR(100) NOT NULL,
    ROOM_CAPACITY INT NOT NULL
);

-- 6. SCHEDULE
CREATE TABLE SCHEDULE (
    SCHED_ID INT PRIMARY KEY,
    SCHED_DAY_OF_WEEK VARCHAR(20) NOT NULL,
    SCHED_START_TIME TIME NOT NULL,
    SCHED_END_TIME TIME NOT NULL
);

-- 7. CLASS
CREATE TABLE CLASS (
    CLS_ID INT PRIMARY KEY,
    CLS_SEMESTER_YEAR VARCHAR(20) NOT NULL,
    SUB_ID INT,
    SCHED_ID INT,
    ROOM_ID INT,
    INS_ID INT,
    FOREIGN KEY (SUB_ID) REFERENCES SUBJECT(SUB_ID),
    FOREIGN KEY (SCHED_ID) REFERENCES SCHEDULE(SCHED_ID),
    FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID),
    FOREIGN KEY (INS_ID) REFERENCES INSTRUCTOR(INS_ID)
);

-- 8. ENROLLMENT
CREATE TABLE ENROLLMENT (
    ENROL_ID INT PRIMARY KEY,
    ENROL_DATE DATE NOT NULL,
    ENROL_STATUS VARCHAR(20) NOT NULL,
    STU_ID INT,
    CLS_ID INT,
    STUDENT_ID VARCHAR(50),
    PROGRAM VARCHAR(100),
    MAJOR VARCHAR(100),
    YEAR_LEVEL VARCHAR(20),
    SCHOOL_YEAR VARCHAR(20),
    SEMESTER VARCHAR(20),
    ENROLLMENT_STATUS VARCHAR(20), -- e.g., 'Regular', 'Irregular'
    STUDENT_STATUS VARCHAR(20),    -- e.g., 'Continuing', 'Returnee', 'Shiftee', 'Cross Enrollee'
    BLOCK_SECTION VARCHAR(50),
    FOREIGN KEY (STU_ID) REFERENCES STUDENT(STU_ID),
    FOREIGN KEY (CLS_ID) REFERENCES CLASS(CLS_ID)
);

-- 9. STUDENT_SUBJECT_COMPLETION
CREATE TABLE STUDENT_SUBJECT_COMPLETION (
    STU_ID INT,
    SUB_ID INT,
    GRADE VARCHAR(5),
    STATUS VARCHAR(20), -- e.g., PASSED / FAILED
    PRIMARY KEY (STU_ID, SUB_ID),
    FOREIGN KEY (STU_ID) REFERENCES STUDENT(STU_ID),
    FOREIGN KEY (SUB_ID) REFERENCES SUBJECT(SUB_ID)
);
